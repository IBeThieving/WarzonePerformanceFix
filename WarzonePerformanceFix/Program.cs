using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace WarzonePerformanceFix
{
    class Program
    {
        // Gets the total amount of CPU cores
        private static string GetLogicalProcessorCount()
        {
            int coreCount = 0;
            foreach (var cpuCore in new System.Management.ManagementObjectSearcher("Select * from Win32_Processor").Get())
            {
                coreCount += int.Parse(cpuCore["NumberOfCores"].ToString());
            }
            return coreCount.ToString();
        }
        // Get the config file by checking all installed drives
        private static List<string> GetOptionsFilePath()
        {
            string directory = @"Documents\Call of Duty Modern Warfare\players\adv_options.ini";
            string currentUser = Environment.UserName;
            DriveInfo[] allDrives = DriveInfo.GetDrives();
            List<string> fileLocations = new List<string>();
            foreach (DriveInfo d in allDrives)
            {
                try
                {
                    string optionsFilePath = $@"{d.Name}Users\{currentUser}\{directory}";
                    if (d.IsReady == true)
                    {
                        if (System.IO.File.Exists(optionsFilePath))
                        {
                            fileLocations.Add(optionsFilePath);
                        }
                    }
                }
                catch (Exception)
                {
                    Console.WriteLine("Access denied, run application as Administrator.");
                }
            }

            bool isEmpty = !fileLocations.Any();

            if (isEmpty)
            {
                Console.WriteLine("We have scanned all drives and have not been able to find Modern Warfare / WarZone, The game must be installed prior to running this performance fix.");
                Console.WriteLine("Press any to continue....");
                Console.Read();
            }

            return fileLocations;
        }
        // Re-writes the config file to the correct values
        private static void FixPerformance(List<string> configFiles)
        {
            Console.WriteLine("Removing GPU bottleneck...");
            Console.WriteLine("Removing CPU bottleneck...");
            Console.WriteLine();
            string logicalCores = GetLogicalProcessorCount();

            Dictionary<string, string> configData = new Dictionary<string, string>
            {
                { "header", "// generated by Infinity Ward" },
                { "version", "version = 1" },
                { "VideoMemoryScale", "VideoMemoryScale = 1.0" },
                { "RendererWorkerCount", $"RendererWorkerCount = {logicalCores}" },
                { "ConfigCloudStorageEnabled", "ConfigCloudStorageEnabled = 1" }
            };

            foreach (string config in configFiles)
            {
                try
                {
                    System.IO.File.Delete(config);
                    using (StreamWriter file = new System.IO.StreamWriter(config))
                    {
                        foreach (KeyValuePair<string, string> kvp in configData)
                        {
                            file.WriteLine(kvp.Value);
                        }
                    }
                }
                catch (Exception)
                {
                    Console.WriteLine("Access denied, run application as Administrator.");
                    Console.Read();
                    Environment.Exit(0);
                }
            }

            Console.WriteLine("Modern Warfare | WarZone: Set VRAM usage to 100%.");
            Console.WriteLine($"Modern Warfare | WarZone Set total CPU cores usage all cores: {logicalCores} cores.");
            Console.WriteLine();
            Console.WriteLine("Performance fix complete!");
        }
        // Output text based information
        static void OutputInfo()
        {
            Console.Title = "WarZone performance fix";
            Console.WriteLine("Delaney/IBeThieving WarZone Performance Fix.");
            Console.WriteLine();
            Console.WriteLine("YouTube: https://youtube.com/IBeThieving");
            Console.WriteLine("Discord: https://discord.safeshare.solutions");
            Console.WriteLine();
        }
        static void Main(string[] args)
        {
            OutputInfo();
            List<string> optionsFileLocations = GetOptionsFilePath();
            FixPerformance(optionsFileLocations);
            Console.Read();
        }
    }
}
